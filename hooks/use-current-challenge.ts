"use client"

import { useState, useEffect } from "react"
import { getTodayVideo, type VideoData } from "@/app/actions/youtube-video"
import { type Challenge } from "@/utils/challenge-constants"
import { useChallenge } from "@/contexts/challenge-context"

// Helper function to convert VideoData to Challenge format
function videoDataToChallenge(videoData: VideoData): Challenge {
  return {
    id: videoData.id,
    title: videoData.title,
    description: videoData.description,
    thumbnailUrl: videoData.thumbnailUrl,
    videoUrl: videoData.videoUrl,
    embedUrl: videoData.embedUrl,
    duration: videoData.duration,
    difficulty: "intermediate", // Default difficulty
    createdAt: new Date().toISOString(),
    topics: Array.isArray(videoData.topics) ? videoData.topics : [],
    featured: true,
    isAutoGenerated: true,
    dailyBatch: new Date().toISOString().split('T')[0]
  }
}

export function useCurrentChallenge() {
  const [currentChallenge, setCurrentChallenge] = useState<Challenge | null>(null)
  const [challengeLoading, setChallengeLoading] = useState(true)
  const { challengeMode, currentChallenge: practiceChallenge, resetToDaily } = useChallenge()

  useEffect(() => {
    const loadCurrentChallenge = async () => {
      try {
        setChallengeLoading(true)
        console.log(`üîç Loading challenge for mode: ${challengeMode}`)
        
        if (challengeMode === 'practice' && practiceChallenge) {
          // Use practice challenge from context
          console.log("‚úÖ Using practice challenge:", practiceChallenge.id)
          setCurrentChallenge(practiceChallenge)
        } else {
          // Load daily challenge (default behavior)
          console.log("üîç Loading today's video for daily challenge...")
          const videoData = await getTodayVideo()
          const challenge = videoDataToChallenge(videoData)
          
          console.log("‚úÖ Today's video loaded successfully:", challenge.id)
          setCurrentChallenge(challenge)
          
          // If we're in practice mode but no practice challenge, reset to daily
          if (challengeMode === 'practice') {
            resetToDaily()
          }
        }
      } catch (error) {
        console.error("‚ùå Error loading challenge:", error)
        setCurrentChallenge(null)
      } finally {
        setChallengeLoading(false)
      }
    }

    loadCurrentChallenge()
  }, [challengeMode, practiceChallenge, resetToDaily]) // Re-run when challenge mode or practice challenge changes

  return {
    currentChallenge,
    challengeLoading,
    challengeMode,
    setCurrentChallenge
  }
}
