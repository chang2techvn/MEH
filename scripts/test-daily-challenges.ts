import { fetchAllChallenges, fetchCurrentChallenge } from '../app/actions/challenge-videos'
import { cleanupExpiredChallenges, cleanupOldDailyChallenges } from '../app/actions/challenge-database'

async function testDailyChallengeSystem() {
  console.log('🚀 Testing Daily Challenge System...\n')

  try {
    // Test 1: Cleanup old and expired challenges
    console.log('1. Testing cleanup functions...')
    const cleanupExpiredResult = await cleanupExpiredChallenges()
    console.log('   - Expired challenges cleanup:', cleanupExpiredResult)
    
    const cleanupOldResult = await cleanupOldDailyChallenges()
    console.log('   - Old daily challenges cleanup:', cleanupOldResult)

    // Test 2: Fetch current challenge
    console.log('\n2. Testing current challenge fetch...')
    const currentChallenge = await fetchCurrentChallenge()
    console.log('   - Current challenge:', currentChallenge ? 'Found' : 'Not found')
    if (currentChallenge) {
      console.log(`   - Title: ${currentChallenge.title}`)
      console.log(`   - Difficulty: ${currentChallenge.difficulty}`)
      console.log(`   - Auto-generated: ${currentChallenge.isAutoGenerated}`)
    }

    // Test 3: Fetch all challenges (should create 10 new ones for today)
    console.log('\n3. Testing daily challenges fetch...')
    const allChallenges = await fetchAllChallenges(3)
    console.log(`   - Total challenges fetched: ${allChallenges.length}`)
    
    const dailyChallenges = allChallenges.filter(c => c.isAutoGenerated)
    const userChallenges = allChallenges.filter(c => !c.isAutoGenerated)
    
    console.log(`   - Daily auto-generated: ${dailyChallenges.length}`)
    console.log(`   - User-created: ${userChallenges.length}`)

    // Test 4: Show sample challenges
    console.log('\n4. Sample daily challenges:')
    dailyChallenges.slice(0, 3).forEach((challenge, index) => {
      console.log(`   ${index + 1}. ${challenge.title} (${challenge.difficulty})`)
      console.log(`      - Duration: ${Math.floor(challenge.duration / 60)}:${(challenge.duration % 60).toString().padStart(2, '0')}`)
      console.log(`      - Daily Batch: ${challenge.dailyBatch}`)
    })

    console.log('\n✅ Daily Challenge System test completed successfully!')
    
  } catch (error) {
    console.error('❌ Test failed:', error)
    throw error
  }
}

// Run the test
testDailyChallengeSystem()
  .then(() => {
    console.log('\n🎉 All tests passed!')
    process.exit(0)
  })
  .catch((error) => {
    console.error('\n💥 Test suite failed:', error)
    process.exit(1)
  })
