#!/usr/bin/env node

/**
 * Script: Add Sample Learning Goals and Vocabulary Data
 * Purpose: Populate the database with sample learning goals and vocabulary entries
 * Usage: node scripts/add-learning-goals-data.js
 */

const { createClient } = require('@supabase/supabase-js');
require('dotenv').config();

// Supabase configuration
const supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL;
const supabaseServiceKey = process.env.SUPABASE_SERVICE_ROLE_KEY;

if (!supabaseUrl || !supabaseServiceKey) {
    console.error('‚ùå Missing Supabase environment variables');
    console.error('Make sure NEXT_PUBLIC_SUPABASE_URL and SUPABASE_SERVICE_ROLE_KEY are set in .env.local');
    process.exit(1);
}

const supabase = createClient(supabaseUrl, supabaseServiceKey);

// Sample vocabulary entries for Vietnamese English learners
const sampleVocabulary = [
    {
        term: "Conference",
        meaning: "h·ªôi ngh·ªã",
        pronunciation: "Ààk…ínf…ôr…ôns",
        definition: "A formal meeting of people to discuss matters of common interest",
        example_sentence: "I attended the annual technology conference last week.",
        example_translation: "T√¥i ƒë√£ tham d·ª± h·ªôi ngh·ªã c√¥ng ngh·ªá th∆∞·ªùng ni√™n tu·∫ßn tr∆∞·ªõc.",
        difficulty_level: "intermediate",
        category: "business",
        usage_count: 4,
        mastery_level: 3,
        source: "ai_conversation"
    },
    {
        term: "Presentation",
        meaning: "b√†i thuy·∫øt tr√¨nh",
        pronunciation: "Àåprez…ônÀàte…™ É…ôn",
        definition: "A speech or talk in which a new product, idea, or piece of work is shown and explained",
        example_sentence: "She gave an excellent presentation about climate change.",
        example_translation: "C√¥ ·∫•y ƒë√£ c√≥ m·ªôt b√†i thuy·∫øt tr√¨nh xu·∫•t s·∫Øc v·ªÅ bi·∫øn ƒë·ªïi kh√≠ h·∫≠u.",
        difficulty_level: "intermediate",
        category: "academic",
        usage_count: 3,
        mastery_level: 4,
        source: "daily_challenge"
    },
    {
        term: "Achievement",
        meaning: "th√†nh t·ª±u",
        pronunciation: "…ôÀàt ÉiÀêvm…ônt",
        definition: "A thing done successfully, especially with effort, skill, or courage",
        example_sentence: "Graduating from university was my greatest achievement.",
        example_translation: "T·ªët nghi·ªáp ƒë·∫°i h·ªçc l√† th√†nh t·ª±u l·ªõn nh·∫•t c·ªßa t√¥i.",
        difficulty_level: "intermediate",
        category: "personal",
        usage_count: 2,
        mastery_level: 3,
        source: "vocabulary_practice"
    },
    {
        term: "Opportunity",
        meaning: "c∆° h·ªôi",
        pronunciation: "Àå…íp…ôÀàtjuÀên…™ti",
        definition: "A set of circumstances that makes it possible to do something",
        example_sentence: "This job offers a great opportunity for career growth.",
        example_translation: "C√¥ng vi·ªác n√†y mang l·∫°i c∆° h·ªôi tuy·ªát v·ªùi ƒë·ªÉ ph√°t tri·ªÉn s·ª± nghi·ªáp.",
        difficulty_level: "intermediate",
        category: "career",
        usage_count: 5,
        mastery_level: 4,
        source: "ai_conversation"
    },
    {
        term: "Development",
        meaning: "ph√°t tri·ªÉn",
        pronunciation: "d…™Ààvel…ôpm…ônt",
        definition: "The process of developing or being developed",
        example_sentence: "The development of new technologies is accelerating rapidly.",
        example_translation: "S·ª± ph√°t tri·ªÉn c·ªßa c√°c c√¥ng ngh·ªá m·ªõi ƒëang tƒÉng t·ªëc nhanh ch√≥ng.",
        difficulty_level: "intermediate",
        category: "technology",
        usage_count: 7,
        mastery_level: 5,
        source: "reading_comprehension"
    },
    {
        term: "Collaboration",
        meaning: "h·ª£p t√°c",
        pronunciation: "k…ôÀål√¶b…ôÀàre…™ É…ôn",
        definition: "The action of working with someone to produce or create something",
        example_sentence: "International collaboration is essential for scientific research.",
        example_translation: "H·ª£p t√°c qu·ªëc t·∫ø l√† ƒëi·ªÅu c·∫ßn thi·∫øt cho nghi√™n c·ª©u khoa h·ªçc.",
        difficulty_level: "advanced",
        category: "business",
        usage_count: 3,
        mastery_level: 2,
        source: "listening_exercise"
    },
    {
        term: "Innovation",
        meaning: "s·ª± ƒë·ªïi m·ªõi",
        pronunciation: "Àå…™n…ôÀàve…™ É…ôn",
        definition: "The action or process of innovating; a new method, idea, product, etc.",
        example_sentence: "The company is known for its innovation in renewable energy.",
        example_translation: "C√¥ng ty n√†y n·ªïi ti·∫øng v·ªÅ s·ª± ƒë·ªïi m·ªõi trong nƒÉng l∆∞·ª£ng t√°i t·∫°o.",
        difficulty_level: "advanced",
        category: "technology",
        usage_count: 6,
        mastery_level: 3,
        source: "ai_conversation"
    },
    {
        term: "Sustainability",
        meaning: "t√≠nh b·ªÅn v·ªØng",
        pronunciation: "s…ôÀåste…™n…ôÀàb…™l…™ti",
        definition: "The ability to be maintained at a certain rate or level",
        example_sentence: "Environmental sustainability is crucial for future generations.",
        example_translation: "T√≠nh b·ªÅn v·ªØng m√¥i tr∆∞·ªùng l√† ƒëi·ªÅu quan tr·ªçng cho c√°c th·∫ø h·ªá t∆∞∆°ng lai.",
        difficulty_level: "advanced",
        category: "environment",
        usage_count: 2,
        mastery_level: 2,
        source: "reading_comprehension"
    },
    {
        term: "Communication",
        meaning: "giao ti·∫øp",
        pronunciation: "k…ôÀåmjuÀên…™Ààke…™ É…ôn",
        definition: "The imparting or exchanging of information or ideas",
        example_sentence: "Effective communication is key to successful teamwork.",
        example_translation: "Giao ti·∫øp hi·ªáu qu·∫£ l√† ch√¨a kh√≥a cho l√†m vi·ªác nh√≥m th√†nh c√¥ng.",
        difficulty_level: "intermediate",
        category: "social",
        usage_count: 8,
        mastery_level: 4,
        source: "speaking_practice"
    },
    {
        term: "Methodology",
        meaning: "ph∆∞∆°ng ph√°p lu·∫≠n",
        pronunciation: "ÀåmeŒ∏…ôÀàd…íl…ôd íi",
        definition: "A system of methods used in a particular area of study or activity",
        example_sentence: "The research methodology was carefully designed and tested.",
        example_translation: "Ph∆∞∆°ng ph√°p lu·∫≠n nghi√™n c·ª©u ƒë√£ ƒë∆∞·ª£c thi·∫øt k·∫ø v√† ki·ªÉm tra c·∫©n th·∫≠n.",
        difficulty_level: "advanced",
        category: "academic",
        usage_count: 1,
        mastery_level: 1,
        source: "vocabulary_practice"
    }
];

// Sample learning goals templates
const sampleGoals = [
    {
        title: "H·ªçc 10 t·ª´ v·ª±ng m·ªõi m·ªói ng√†y",
        description: "M·ªü r·ªông v·ªën t·ª´ v·ª±ng ti·∫øng Anh v·ªõi 10 t·ª´ m·ªõi m·ªói ng√†y",
        category: "vocabulary",
        target: 10,
        current: 8,
        unit: "t·ª´",
        deadline: "2025-06-30",
        priority: "high"
    },
    {
        title: "Luy·ªán n√≥i 30 ph√∫t m·ªói ng√†y",
        description: "C·∫£i thi·ªán k·ªπ nƒÉng n√≥i ti·∫øng Anh th√¥ng qua th·ª±c h√†nh h√†ng ng√†y",
        category: "speaking",
        target: 30,
        current: 25,
        unit: "ph√∫t",
        deadline: "2025-06-30",
        priority: "high"
    },
    {
        title: "Ho√†n th√†nh 5 b√†i t·∫≠p ng·ªØ ph√°p m·ªói tu·∫ßn",
        description: "N·∫Øm v·ªØng c√°c quy t·∫Øc ng·ªØ ph√°p ti·∫øng Anh c∆° b·∫£n v√† n√¢ng cao",
        category: "grammar",
        target: 5,
        current: 2,
        unit: "b√†i",
        deadline: "2025-06-25",
        priority: "medium"
    },
    {
        title: "Nghe 20 ph√∫t podcast ti·∫øng Anh m·ªói ng√†y",
        description: "C·∫£i thi·ªán kh·∫£ nƒÉng nghe hi·ªÉu v√† l√†m quen v·ªõi c√°c gi·ªçng n√≥i kh√°c nhau",
        category: "listening",
        target: 20,
        current: 15,
        unit: "ph√∫t",
        deadline: "2025-07-31",
        priority: "medium"
    },
    {
        title: "ƒê·ªçc 1 b√†i b√°o ti·∫øng Anh m·ªói ng√†y",
        description: "N√¢ng cao k·ªπ nƒÉng ƒë·ªçc hi·ªÉu v√† m·ªü r·ªông ki·∫øn th·ª©c v·ªÅ th·∫ø gi·ªõi",
        category: "reading",
        target: 1,
        current: 0,
        unit: "b√†i",
        deadline: "2025-08-31",
        priority: "low"
    },
    {
        title: "Vi·∫øt 200 t·ª´ ti·∫øng Anh m·ªói ng√†y",
        description: "Ph√°t tri·ªÉn k·ªπ nƒÉng vi·∫øt v√† kh·∫£ nƒÉng di·ªÖn ƒë·∫°t √Ω t∆∞·ªüng b·∫±ng ti·∫øng Anh",
        category: "writing",
        target: 200,
        current: 150,
        unit: "t·ª´",
        deadline: "2025-07-15",
        priority: "medium"
    }
];

// Sample study streaks
const sampleStreaks = [
    { category: "vocabulary", current_streak: 7, longest_streak: 15 },
    { category: "grammar", current_streak: 3, longest_streak: 10 },
    { category: "speaking", current_streak: 12, longest_streak: 18 },
    { category: "listening", current_streak: 5, longest_streak: 8 },
    { category: "reading", current_streak: 2, longest_streak: 6 },
    { category: "writing", current_streak: 1, longest_streak: 4 },
    { category: "overall", current_streak: 9, longest_streak: 21 }
];

async function addLearningGoalsData() {
    try {
        console.log('üöÄ Starting Learning Goals data insertion...');

        // First, let's get a sample user (you can specify a specific user_id if needed)
        const { data: users, error: usersError } = await supabase
            .from('users')
            .select('id')
            .limit(1);

        if (usersError) {
            console.error('‚ùå Error fetching users:', usersError);
            return;
        }

        if (!users || users.length === 0) {
            console.error('‚ùå No users found. Please ensure you have at least one user in the database.');
            return;
        }

        const userId = users[0].id;
        console.log(`üìù Using user ID: ${userId}`);

        // Insert vocabulary entries
        console.log('üìö Inserting vocabulary entries...');
        const vocabularyData = sampleVocabulary.map(vocab => ({
            ...vocab,
            user_id: userId
        }));

        const { data: vocabInserted, error: vocabError } = await supabase
            .from('vocabulary_entries')
            .insert(vocabularyData)
            .select();

        if (vocabError) {
            console.error('‚ùå Error inserting vocabulary:', vocabError);
        } else {
            console.log(`‚úÖ Successfully inserted ${vocabInserted.length} vocabulary entries`);
        }

        // Insert learning goals
        console.log('üéØ Inserting learning goals...');
        const goalsData = sampleGoals.map(goal => ({
            ...goal,
            user_id: userId
        }));

        const { data: goalsInserted, error: goalsError } = await supabase
            .from('learning_goals')
            .insert(goalsData)
            .select();

        if (goalsError) {
            console.error('‚ùå Error inserting goals:', goalsError);
        } else {
            console.log(`‚úÖ Successfully inserted ${goalsInserted.length} learning goals`);
        }

        // Insert study streaks
        console.log('üî• Inserting study streaks...');
        const streaksData = sampleStreaks.map(streak => ({
            ...streak,
            user_id: userId
        }));

        const { data: streaksInserted, error: streaksError } = await supabase
            .from('study_streaks')
            .insert(streaksData)
            .select();

        if (streaksError) {
            console.error('‚ùå Error inserting streaks:', streaksError);
        } else {
            console.log(`‚úÖ Successfully inserted ${streaksInserted.length} study streaks`);
        }

        // Insert some sample learning progress entries
        console.log('üìä Inserting learning progress entries...');
        const progressData = [
            {
                user_id: userId,
                goal_id: goalsInserted?.[0]?.id,
                activity_type: 'vocabulary_learned',
                activity_data: { words_learned: ['conference', 'presentation'] },
                progress_value: 2,
                session_duration: 15,
                accuracy_score: 85.5
            },
            {
                user_id: userId,
                goal_id: goalsInserted?.[1]?.id,
                activity_type: 'speaking_session',
                activity_data: { topics_covered: ['daily_routine', 'hobbies'] },
                progress_value: 1,
                session_duration: 25,
                accuracy_score: 78.0
            },
            {
                user_id: userId,
                goal_id: goalsInserted?.[2]?.id,
                activity_type: 'grammar_practice',
                activity_data: { topics: ['present_perfect', 'passive_voice'] },
                progress_value: 2,
                session_duration: 20,
                accuracy_score: 92.0
            }
        ];

        const { data: progressInserted, error: progressError } = await supabase
            .from('learning_progress')
            .insert(progressData)
            .select();

        if (progressError) {
            console.error('‚ùå Error inserting progress:', progressError);
        } else {
            console.log(`‚úÖ Successfully inserted ${progressInserted.length} progress entries`);
        }

        console.log('\nüéâ Learning Goals data insertion completed successfully!');
        console.log('\nüìã Summary:');
        console.log(`   - ${vocabInserted?.length || 0} vocabulary entries`);
        console.log(`   - ${goalsInserted?.length || 0} learning goals`);
        console.log(`   - ${streaksInserted?.length || 0} study streaks`);
        console.log(`   - ${progressInserted?.length || 0} progress entries`);
        console.log(`   - User ID: ${userId}`);

    } catch (error) {
        console.error('üí• Unexpected error:', error);
        process.exit(1);
    }
}

// Run the script
if (require.main === module) {
    addLearningGoalsData()
        .then(() => {
            console.log('\n‚ú® Script execution completed');
            process.exit(0);
        })
        .catch((error) => {
            console.error('üí• Script failed:', error);
            process.exit(1);
        });
}

module.exports = { addLearningGoalsData };
